// <auto-generated />
using System;
using CSX_Server.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CSX_Server.Migrations
{
    [DbContext(typeof(CsxContext))]
    partial class CsxContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("Relational:Sequence:business.order_companies", "'order_companies', 'business', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:business.order_company_users", "'order_company_users', 'business', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:business.order_departments", "'order_departments', 'business', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:business.order_page_views", "'order_page_views', 'business', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:business.order_surveys", "'order_surveys', 'business', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:general.order_actions", "'order_actions', 'general', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:general.order_roles", "'order_roles', 'general', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:general.order_token_logs", "'order_token_logs', 'general', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:general.order_tokens", "'order_tokens', 'general', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:general.order_users", "'order_users', 'general', '1', '1', '', '', 'Int64', 'False'");

            modelBuilder.Entity("CSX_Server.Models.Actions", b =>
                {
                    b.Property<decimal>("id_action")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("nextval('general.order_actions'::regclass)");

                    b.Property<DateTime>("createdat");

                    b.Property<int>("credits");

                    b.Property<decimal>("fk_company");

                    b.Property<int?>("fk_survey");

                    b.Property<decimal>("fk_user_create");

                    b.Property<string>("message");

                    b.Property<DateTime?>("payedat");

                    b.Property<string>("type")
                        .IsRequired();

                    b.HasKey("id_action");

                    b.HasIndex("fk_company");

                    b.HasIndex("fk_user_create");

                    b.HasIndex("type");

                    b.ToTable("actions","general");
                });

            modelBuilder.Entity("CSX_Server.Models.Companies", b =>
                {
                    b.Property<decimal>("id_company")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("nextval('business.order_companies'::regclass)");

                    b.Property<DateTime>("createdat");

                    b.Property<int>("days_contract");

                    b.Property<DateTime?>("deletedat");

                    b.Property<decimal>("fk_user_create");

                    b.Property<decimal?>("fk_user_delete");

                    b.Property<decimal?>("fk_user_update");

                    b.Property<string>("full_name")
                        .IsRequired();

                    b.Property<string>("notification_phone");

                    b.Property<string>("plan");

                    b.Property<string>("site");

                    b.Property<DateTime?>("updatedat");

                    b.Property<string>("url_logo");

                    b.HasKey("id_company");

                    b.HasIndex("fk_user_create");

                    b.ToTable("companies","business");
                });

            modelBuilder.Entity("CSX_Server.Models.CompanyUsers", b =>
                {
                    b.Property<decimal>("id_company_user")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("nextval('business.order_company_users'::regclass)");

                    b.Property<DateTime>("createdat");

                    b.Property<DateTime?>("deletedat");

                    b.Property<decimal>("fk_company");

                    b.Property<decimal>("fk_role");

                    b.Property<decimal>("fk_user");

                    b.Property<decimal>("fk_user_create");

                    b.Property<decimal?>("fk_user_delete");

                    b.Property<decimal?>("fk_user_update");

                    b.Property<DateTime?>("updatedat");

                    b.HasKey("id_company_user");

                    b.HasIndex("fk_company");

                    b.HasIndex("fk_role");

                    b.HasIndex("fk_user_create");

                    b.ToTable("company_users","business");
                });

            modelBuilder.Entity("CSX_Server.Models.Department", b =>
                {
                    b.Property<decimal>("id_department")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("nextval('business.order_departments'::regclass)");

                    b.Property<bool>("actived");

                    b.Property<DateTime>("createdat");

                    b.Property<DateTime?>("deletedat");

                    b.Property<decimal>("fk_company");

                    b.Property<decimal>("fk_user_create");

                    b.Property<decimal?>("fk_user_delete");

                    b.Property<decimal?>("fk_user_update");

                    b.Property<string>("name")
                        .IsRequired();

                    b.Property<DateTime?>("updatedat");

                    b.HasKey("id_department");

                    b.HasIndex("fk_company");

                    b.ToTable("department","business");
                });

            modelBuilder.Entity("CSX_Server.Models.PageView", b =>
                {
                    b.Property<decimal>("idpageview")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("nextval('business.order_page_views'::regclass)");

                    b.Property<DateTime>("acessdate");

                    b.Property<string>("device_info")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<decimal>("fk_survey");

                    b.HasKey("idpageview");

                    b.HasIndex("fk_survey");

                    b.ToTable("page_view","business");
                });

            modelBuilder.Entity("CSX_Server.Models.Roles", b =>
                {
                    b.Property<decimal>("id_role")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("nextval('general.order_roles'::regclass)");

                    b.Property<bool>("administrator");

                    b.Property<DateTime>("createdat");

                    b.Property<string>("description")
                        .IsRequired();

                    b.Property<string>("permissions")
                        .HasColumnType("json");

                    b.Property<string>("title")
                        .IsRequired();

                    b.Property<DateTime?>("updatedat");

                    b.HasKey("id_role");

                    b.ToTable("roles","general");
                });

            modelBuilder.Entity("CSX_Server.Models.Surveys", b =>
                {
                    b.Property<decimal>("id_survey")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("nextval('business.order_surveys'::regclass)");

                    b.Property<bool>("active");

                    b.Property<string>("color_button")
                        .HasColumnType("json");

                    b.Property<DateTime>("createdat");

                    b.Property<DateTime?>("deletedat");

                    b.Property<string>("description");

                    b.Property<decimal>("fk_company");

                    b.Property<decimal>("fk_user_create");

                    b.Property<decimal?>("fk_user_delete");

                    b.Property<decimal?>("fk_user_update");

                    b.Property<string>("language");

                    b.Property<string>("title")
                        .IsRequired();

                    b.Property<DateTime?>("updatedat");

                    b.HasKey("id_survey");

                    b.HasIndex("fk_company");

                    b.HasIndex("fk_user_create");

                    b.ToTable("surveys","business");
                });

            modelBuilder.Entity("CSX_Server.Models.Users", b =>
                {
                    b.Property<decimal>("id_user")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("nextval('general.order_users'::regclass)");

                    b.Property<DateTime>("createdat");

                    b.Property<string>("email")
                        .IsRequired();

                    b.Property<decimal>("fk_company_default");

                    b.Property<decimal?>("fk_department");

                    b.Property<string>("full_name")
                        .IsRequired();

                    b.Property<DateTime?>("last_acess");

                    b.Property<string>("password");

                    b.Property<string>("phone");

                    b.Property<int?>("type_user");

                    b.Property<DateTime?>("updatedat");

                    b.Property<string>("url_image");

                    b.HasKey("id_user");

                    b.HasIndex("fk_department");

                    b.ToTable("users","general");
                });

            modelBuilder.Entity("PliQ.Models.TokenLogs", b =>
                {
                    b.Property<decimal>("id_token_log")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("nextval('general.order_token_logs'::regclass)");

                    b.Property<string>("body");

                    b.Property<DateTime>("createdat");

                    b.Property<decimal>("fk_token");

                    b.Property<string>("header");

                    b.Property<string>("http_method");

                    b.Property<string>("ip");

                    b.Property<string>("result");

                    b.Property<string>("status");

                    b.Property<string>("url_method");

                    b.HasKey("id_token_log");

                    b.HasIndex("fk_token");

                    b.ToTable("token_logs","general");
                });

            modelBuilder.Entity("PliQ.Models.Tokens", b =>
                {
                    b.Property<decimal>("id_token")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("nextval('general.order_tokens'::regclass)");

                    b.Property<bool>("active");

                    b.Property<Guid>("code");

                    b.Property<DateTime>("createdat");

                    b.Property<decimal>("fk_company");

                    b.Property<decimal>("fk_user_create");

                    b.Property<decimal?>("fk_user_update");

                    b.Property<int>("hits");

                    b.Property<DateTime?>("updatedat");

                    b.HasKey("id_token");

                    b.HasIndex("code");

                    b.HasIndex("fk_company");

                    b.HasIndex("fk_user_create");

                    b.ToTable("tokens","general");
                });

            modelBuilder.Entity("CSX_Server.Models.Actions", b =>
                {
                    b.HasOne("CSX_Server.Models.Companies", "Companies")
                        .WithMany("Actions")
                        .HasForeignKey("fk_company")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CSX_Server.Models.Users", "Users")
                        .WithMany("Actions")
                        .HasForeignKey("fk_user_create")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CSX_Server.Models.Companies", b =>
                {
                    b.HasOne("CSX_Server.Models.Users", "Users")
                        .WithMany("Companies")
                        .HasForeignKey("fk_user_create")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CSX_Server.Models.CompanyUsers", b =>
                {
                    b.HasOne("CSX_Server.Models.Companies", "Companies")
                        .WithMany("CompanyUsers")
                        .HasForeignKey("fk_company")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CSX_Server.Models.Roles", "Roles")
                        .WithMany("CompanyUsers")
                        .HasForeignKey("fk_role")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CSX_Server.Models.Users", "Users")
                        .WithMany("CompanyUsers")
                        .HasForeignKey("fk_user_create")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CSX_Server.Models.Department", b =>
                {
                    b.HasOne("CSX_Server.Models.Companies", "Company")
                        .WithMany("Department")
                        .HasForeignKey("fk_company")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CSX_Server.Models.PageView", b =>
                {
                    b.HasOne("CSX_Server.Models.Surveys", "Surveys")
                        .WithMany("PageViews")
                        .HasForeignKey("fk_survey")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CSX_Server.Models.Surveys", b =>
                {
                    b.HasOne("CSX_Server.Models.Companies", "Companies")
                        .WithMany("Survey")
                        .HasForeignKey("fk_company")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CSX_Server.Models.Users", "Users")
                        .WithMany("Surveys")
                        .HasForeignKey("fk_user_create")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CSX_Server.Models.Users", b =>
                {
                    b.HasOne("CSX_Server.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("fk_department")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("PliQ.Models.TokenLogs", b =>
                {
                    b.HasOne("PliQ.Models.Tokens", "Token")
                        .WithMany("TokenLogs")
                        .HasForeignKey("fk_token")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PliQ.Models.Tokens", b =>
                {
                    b.HasOne("CSX_Server.Models.Companies", "Companies")
                        .WithMany("Tokens")
                        .HasForeignKey("fk_company")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CSX_Server.Models.Users", "Users")
                        .WithMany("Tokens")
                        .HasForeignKey("fk_user_create")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
